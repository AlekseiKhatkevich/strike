"""create users table

Revision ID: 1e71efa179d8
Revises: 
Create Date: 2023-05-26 17:37:30.600346

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1e71efa179d8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=True), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=True),
    sa.Column('hashed_password', sa.String(length=256), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('registration_date', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.CheckConstraint("regexp_like(email, '^[a-zA-Z][a-zA-Z0-9_\\.\\-]+@([a-zA-Z0-9-]{2,}\\.)+([a-zA-Z]{2,4}|[a-zA-Z]{2}\\.[a-zA-Z]{2})$')", name=op.f('ck_users_email')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index('email_unique_idx', 'users', ['email'], unique=True, postgresql_where=sa.text('is_active = true'))
    op.create_index('name_unique_idx', 'users', ['name'], unique=True, postgresql_where=sa.text('is_active = true'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('name_unique_idx', table_name='users', postgresql_where=sa.text('is_active = true'))
    op.drop_index('email_unique_idx', table_name='users', postgresql_where=sa.text('is_active = true'))
    op.drop_table('users')
    # ### end Alembic commands ###
